import os
import sipconfig
from PyQt5 import QtCore

# You should modify to get exact directory paths to SIP, Qt
#sip_inc_dir = "/usr/local/share/sip/PyQt5"
#qt_inc_dir = "/opt/Qt5.9.1/5.9.1/gcc_64/include"
home_dir = os.path.expanduser('~')
sip_inc_dir = "/Volumes/D/projects/python/DOWNLOAD/PyQt5_gpl-5.9.2/sip"
qt_inc_dir = "/usr/local/Qt-5.9.2/lib"

target_dir = os.getcwd() + "/../src"

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = "hello.sbf"

# Get the PyQt configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.  Note that we tell SIP where to find the qt
# module's specification files using the -I flag.
os.system(" ".join([config.sip_bin, "-c", ".", "-b", build_file,
                    "-I" + sip_inc_dir, QtCore.PYQT_CONFIGURATION["sip_flags"],
                    "hello.sip"]))

# Create the Makefile.
makefile = sipconfig.SIPModuleMakefile(config, build_file)

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the "lib" prefix on UNIX, or the
# ".dll" extension on Windows).
extraFlags = "-std=c++11  -I%s/QtCore.framework/Headers -I%s/QtGui.framework/Headers -F%s" % (qt_inc_dir, qt_inc_dir, qt_inc_dir) 
makefile.extra_cflags = [extraFlags]
makefile.extra_cxxflags = [extraFlags]
#makefile.extra_lflags = ["-Wl,-R" + target_dir]
makefile.extra_lib_dirs = [target_dir]
makefile.extra_libs = ["hello"]

# Generate the Makefile itself.
makefile.generate()
